53+34
wrk.loyal.out<-THD_comp %>%
group_by(HDTreatment, wrk_loyal) %>%
summarise(loyal = survey_mean(proportion=TRUE, vartype="ci"),
w_n = n(),
n = unweighted(n()))
#wrk.loyal.out
wrk.loyal.out$loyal_num<-as.numeric(wrk.loyal.out$wrk_loyal)
emp.loyal.out<-THD_comp %>%
group_by(HDTreatment, emp_loyal) %>%
summarise(loyal = survey_mean(proportion=TRUE, vartype="ci"),
n = unweighted(n()))
emp.loyal.out$loyal_num<-as.numeric(emp.loyal.out$emp_loyal)
#emp.loyal.out
emp.reco.out <- THD_comp %>%
group_by(HDTreatment, emp_reco) %>%
summarise(reco = survey_mean(proportion=TRUE, vartype="ci"),
n = unweighted(n()))
emp.reco.out$reco_num <- as.numeric(emp.reco.out$emp_reco)
#emp.loyal.out
nps<-emp.reco.out %>%  #calculating reco + v. reco - props by treatment
group_map(~sum(.x$reco[.x$reco_num>3], na.rm=T) -
sum(.x$reco[.x$reco_num<3], na.rm=T))
nps
?survey_mean
?survey_var
THD_comp %>%
summarise(wl.sd = survey_sd(as.numeric(wrk_loyal), vartype="ci", na.rm=T))
summarise(THD_comp,wl.sd = survey_sd(as.numeric(wrk_loyal), vartype="ci", na.rm=T))
sds<-THD_comp %>%
summarise(THD_comp,wl.sd = survey_sd(as.numeric(wrk_loyal), vartype="ci", na.rm=T),
THD_comp,el.sd = survey_sd(as.numeric(emp_loyal), vartype="ci", na.rm=T),
THD_comp,er.sd = survey_sd(as.numeric(emo_reco), vartype="ci", na.rm=T)
)
sds<-THD_comp %>%
summarise(wl.sd = survey_sd(as.numeric(wrk_loyal), vartype="ci", na.rm=T),
el.sd = survey_sd(as.numeric(emp_loyal), vartype="ci", na.rm=T),
er.sd = survey_sd(as.numeric(emo_reco), vartype="ci", na.rm=T)
)
sds<-THD_comp %>%
summarise(wl.sd = survey_sd(as.numeric(wrk_loyal), vartype="ci", na.rm=T),
el.sd = survey_sd(as.numeric(emp_loyal), vartype="ci", na.rm=T),
er.sd = survey_sd(as.numeric(emp_reco), vartype="ci", na.rm=T)
)
sds
mean(sds)
mean(sds[1,])
names(sds)
sds[1,]
sds[1,1]
sqrt(sds[1,1])
mean(c(sds[1,]))
c(sds[1,])
as.vector(sds[1,])
mean(as.vector(sds[1,]))
mean(as.numeric(sds[1,]))
wrkloyal_reg_b<-svyglm(as.numeric(wrk_loyal) ~
HDTreatment,
design = THD_comp)
coef(wrkloyal_reg_b)
coef(wrkloyal_reg_b)[3]
coef(wrkloyal_reg_b,employal_reg_b)[3]
coef(wrkloyal_reg_b,employal_reg_b)
coef(c(wrkloyal_reg_b,employal_reg_b))
c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])
employal_reg_b<-svyglm(as.numeric(emp_loyal) ~
HDTreatment,
design = THD_comp)
empreco_reg_b<-svyglm(as.numeric(emp_reco) ~
HDTreatment,
design = THD_comp)
c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])
c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])/sds
sds
mean(c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])/sds)
mean(asnumeric(c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])/sds))
mean(as.numeric(c(coef(wrkloyal_reg_b)[3],coef(employal_reg_b)[3],coef(empreco_reg_b)[3])/sds))
unionvote.out<-THD_comp %>%
group_by(HDTreatment, union_vote) %>%
summarise(union = survey_mean(proportion=TRUE, vartype="ci"),
n = unweighted(n()))
unionvote.out
uv_plot <- ggplot(data = unionvote.out,
mapping = aes(x = union_vote, y = union,
ymin = union_low,
ymax = union_upp,
fill = HDTreatment,
color = HDTreatment,
group = HDTreatment))
uv_plot <- uv_plot + geom_col(position = dodge, alpha = 0.2) +
geom_errorbar(position = dodge, width = 0.2) +
#scale_x_continuous(name=NULL,
#                 breaks = 1:4,
#                 labels = c("1" ="none at all",
#                            "2"="", "3" = "",
#                            "4"="a lot")) +
labs(title = "Support for unionization by EHF treatment",
x = NULL, y = "% treatment group") +
scale_y_continuous(labels = scales::label_percent(accuracy=1L)) +
scale_fill_discrete(name="EHF treatment",
breaks=c("cntrl", "txt", "vid"),
labels=c("Control", "Text", "Video")) +
scale_color_discrete(name = "EHF treatment",
labels=c("Control", "Text", "Video")) +
#scale_color_brewer(type = "qual", palette = "Dark2", aesthetics = c("colour", "fill")) +
theme(legend.position = "top",
panel.grid = element_blank())
dodge <- position_dodge(width=0.9)
unionvote.out<-THD_comp %>%
group_by(HDTreatment, union_vote) %>%
summarise(union = survey_mean(proportion=TRUE, vartype="ci"),
n = unweighted(n()))
ui.out<-THD_comp %>%
group_by(HDTreatment, gov_ui) %>%
summarise(ui = survey_mean(proportion=TRUE, vartype="ci"),
n = unweighted(n()))
#plots
uv_plot <- ggplot(data = unionvote.out,
mapping = aes(x = union_vote, y = union,
ymin = union_low,
ymax = union_upp,
fill = HDTreatment,
color = HDTreatment,
group = HDTreatment))
uv_plot <- uv_plot + geom_col(position = dodge, alpha = 0.2) +
geom_errorbar(position = dodge, width = 0.2) +
#scale_x_continuous(name=NULL,
#                 breaks = 1:4,
#                 labels = c("1" ="none at all",
#                            "2"="", "3" = "",
#                            "4"="a lot")) +
labs(title = "Support for unionization by EHF treatment",
x = NULL, y = "% treatment group") +
scale_y_continuous(labels = scales::label_percent(accuracy=1L)) +
scale_fill_discrete(name="EHF treatment",
breaks=c("cntrl", "txt", "vid"),
labels=c("Control", "Text", "Video")) +
scale_color_discrete(name = "EHF treatment",
labels=c("Control", "Text", "Video")) +
#scale_color_brewer(type = "qual", palette = "Dark2", aesthetics = c("colour", "fill")) +
theme(legend.position = "top",
panel.grid = element_blank())
uv_plot
ui.out
uv_multinom<- svy_vglm(
formula = union_vote ~ HDTreatment,
design = THD_comp,
family = multinomial(refLevel = "Not sure"))
summary(uv_multinom)
xtable(summary(uv_multinom))
xtable::xtable(summary(uv_multinom))
texreg::texreg(summary(uv_multinom))
texreg::texreg(uv_multinom)
xtable::xtable(uv_multinom)
data.frame(summary(uv_multinom))
?kabble
kable
library(knitr)
?kable
kable(summary(uv_multinom))
kable(uv_multinom)
install.packages("huxtable")
library(ascii)
install.packages("ascii")
install.packages("tables")
install.packages("pander")
pander::pander(uv_multinom)
pander::pander(summary(uv_multinom))
names(summary(uv_multinom))
uv_multinom$coeftable
length(uv_multinom)
uv_multinom[[7]]
uv_multinom[[6]]
uv_multinom[[5]]
uv_multinom[[4]]
uv_multinom[[3]]
uv_multinom[[2]]
uv_multinom[[1]]
length(summary(uv_multinom))
summary(uv_multinom))[[8]]
summary(uv_multinom)[[8]]
pander(summary(uv_multinom)[[8]])
pander::pander(summary(uv_multinom)[[8]])
xtable(summary(uv_multinom)[[8]])
xtable::xtable(summary(uv_multinom)[[8]])
stargazer(summary(uv_multinom)[[8]])
uv_multinom_b<- svy_vglm(
formula = union_vote ~ HDTreatment,
design = THD_comp,
family = multinomial(refLevel = "Not sure"))
uv_multinom_c<- svy_vglm(
formula = union_vote ~ HDTreatment +
age + male + main_job + tenure_fac +
nonwhite + fulltime + hourly+ college,
design = THD_comp,
family = multinomial(refLevel = "Not sure"))
summary(uv_multinom_c)
ui_reg_c<-svyglm(as.numeric(gov_ui) ~
HDTreatment +age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college,
design = THD_comp)
summary(ui_reg_c)
out.tab<-summary(uv_multinom_c)
rownames(out.tab) <- str_replace(rownames(out.tab), c(":1", ":2"), c(": For", ": Against"))
out.tab
names(summary(out.tab))
length(summary(out.tab))
summary(out.tab)[[8]]
summary(out.tab)[[1]]
summary(out.tab)[[24]]
summary(out.tab)[[23]]
attributes(summary(out.tab))
summary(out.tab)$coeftable
summary(out.tab)[["coeftable"]]
summary(out.tab)[[]]
summary(out.tab)
names(out.tab)
out.tab$coef
out.tab$coeftable
rownames(out.tab)
row.names(out.tab)
rownames(out.tab$coeftable)
rownames(out.tab) <- c("(Intercept):For", "(Intercept):Against",
"TRT:txt:For", "TRT:txt:Against",
"TRT:vid:For", "TRT:vid:Against",
"age:", "age:Against", "male:For", "male:Against",
"main job:For", "main job:Against",
"tenure: 6-12mos:For", "tenure: 6-12mos:Against",
"1-2 yrs.:For","1-2 yrs.:Against", "2-3 yrs.:For", "2-3 yrs.:Against",
"3+ yrs.:For","3+ yrs.:Against",
"nonwhite:For", "nonwhite:Against",
"fulltime:For", "fulltime:Against",
"hourly:For", "hourly:Against",
"college:For", "college:Against")
rownames(out.tab$coeftable) <- c("(Intercept):For", "(Intercept):Against",
"TRT:txt:For", "TRT:txt:Against",
"TRT:vid:For", "TRT:vid:Against",
"age:", "age:Against", "male:For", "male:Against",
"main job:For", "main job:Against",
"tenure: 6-12mos:For", "tenure: 6-12mos:Against",
"1-2 yrs.:For","1-2 yrs.:Against", "2-3 yrs.:For", "2-3 yrs.:Against",
"3+ yrs.:For","3+ yrs.:Against",
"nonwhite:For", "nonwhite:Against",
"fulltime:For", "fulltime:Against",
"hourly:For", "hourly:Against",
"college:For", "college:Against")
stargazer(out.tab$coeftable)
?stargazer
ee.out<-THD_comp %>%
group_by(HDTreatment, emergency_expense) %>%
summarise(finsec = survey_mean(proportion=TRUE, vartype="ci"),
w_n = n(),
n = unweighted(n()))
ee.out$emergency_expense_num<-as.numeric(ee.out$emergency_expense)
ee.out.bin<-THD_comp %>%
group_by(HDTreatment, emergency_expense_bin) %>%
summarise(finsec = survey_mean(proportion=TRUE, vartype="ci"),
w_n = n(),
n = unweighted(n()))
ee.out.bin$emergency_expense_num<-as.numeric(ee.out.bin$emergency_expense_bin)
p.ord <- ggplot(data = ee.out,
mapping = aes(x = emergency_expense_num, y = finsec,
ymin = finsec_low,
ymax = finsec_upp,
fill = HDTreatment,
color = HDTreatment,
group = HDTreatment))
dodge <- position_dodge(width=0.9)
p.ord<- p.ord + geom_col(position = dodge, alpha = 0.2) +
geom_errorbar(position = dodge, width = 0.2) +
scale_x_continuous(name=NULL,
breaks = 1:4,
labels = c("1" ="definitely can't cover $400",
"2"="","3"="",
"4"="can definitely cover $400")) +
labs(title = "Financial insecurity by EHF treatment",
x = NULL, y = "% treatment group") +
scale_y_continuous(labels = scales::label_percent(accuracy=1L)) +
scale_fill_discrete(name="EHF treatment",
breaks=c("cntrl", "txt", "vid"),
labels=c("Control", "Text", "Video")) +
scale_color_discrete(name = "EHF treatment",
labels=c("Control", "Text", "Video")) +
#scale_color_brewer(type = "qual", palette = "Dark2", aesthetics = c("colour", "fill")) +
theme(legend.position = "top",
panel.grid = element_blank())
p.bin<- ggplot(data = ee.out.bin,
mapping = aes(x = emergency_expense_num, y = finsec,
ymin = finsec_low,
ymax = finsec_upp,
fill = HDTreatment,
color = HDTreatment,
group = HDTreatment))
p.bin<- p.bin + geom_col(position = dodge, alpha = 0.2) +
geom_errorbar(position = dodge, width = 0.2) +
scale_x_continuous(name=NULL,
breaks = 0:For,
labels = c("0" ="can't cover $400",
"1"="can cover $400")) +
labs(title = "Financial insecurity by EHF treatment",
x = NULL, y = "% treatment group") +
scale_y_continuous(labels = scales::label_percent(accuracy=1L)) +
scale_fill_discrete(name="EHF treatment",
breaks=c("cntrl", "txt", "vid"),
labels=c("Control", "Text", "Video")) +
scale_color_discrete(name = "EHF treatment",
labels=c("Control", "Text", "Video")) +
theme(legend.position = "none",
panel.grid = element_blank())
q()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(here)
library(MASS)
library(tidyverse)
library(codebook)
library(survey)
library(questionr)
library(srvyr)
library(svrepmisc)
library(svyVGAM)
#library(apsrtable)
library(stargazer)
library(texreg)
#devtools::install_github("pewresearch/pewmethods", build_vignettes = TRUE)
library(pewmethods)
ggplot2::theme_set(ggplot2::theme_bw())
here()
set.seed(98)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(here)
library(MASS)
library(tidyverse)
library(codebook)
library(survey)
library(questionr)
library(srvyr)
library(svrepmisc)
library(svyVGAM)
#library(apsrtable)
library(stargazer)
#library(texreg)
#devtools::install_github("pewresearch/pewmethods", build_vignettes = TRUE)
library(pewmethods)
ggplot2::theme_set(ggplot2::theme_bw())
here()
set.seed(98)
THD_comp<-read_csv(here("0_data", "THD", "THD_completed.csv")) %>%
mutate(emergency_expense = factor(Q3.4, levels =
c("I am certain I could not come up with $400",
"I could probably not come up with $400",
"I could probably come up with $400",
"I am certain I could come up with the full $400"),
ordered= TRUE
),
emergency_expense_bin = ifelse(  #binary expense variable; T if can cover expense
grepl(" not ", Q3.4),
FALSE,
TRUE),
bills = factor(Q6.15),
EHF_aware_list = grepl("Cash", Q2.15, fixed=T), #asked of all respondents
EHF_aware_simp = as.factor(Q3.10),  #asked only of control group
HF_know = factor(Q3.12),
HF_applied = factor(Q3.13),
HF_mgr = factor(Q3.16),
HF_donate = factor(Q3.24),
nonwhite = Q6.3 != "White",
main_job = Q2.7 == "Yes",
tenure_fac = factor(Q2.9, levels =
c("Less than 6 months", "At least 6 months but less than 1 year",
"At least 1 year but less than 2 years",
"At least 2 years but less than 3 years",
"3 or more years")
),
tenure_fac_h = C(ordered(tenure_fac),contr.helmert),
tenure_num = unclass(tenure_fac_h),
fulltime = Q2.10 == "Regular full-time",
hourly = Q2.13 == "Yes",
ed = factor(Q6.5, levels =
c("No degree or diploma earned",
"High school diploma/GED",
"Some college",
"Associate's degree",
"Bachelor's degree",
"Master's degree/Advanced degree")),
ed_h = C(ordered(ed), contr.helmert),
college = ed %in% c(
"Bachelor's degree",
"Master's degree/Advanced degree"),
male = Q6.2=="Male",
wrk_loyal = factor(Q3.5, levels =
c("No loyalty at all", "Only a little loyalty",
"Some loyalty","A lot of loyalty"),
ordered = TRUE),
emp_loyal = factor(Q3.6, levels =
c("No loyalty at all", "Only a little loyalty",
"Some loyalty","A lot of loyalty"),
ordered = TRUE),
union_vote = factor(Q3.7),
emp_reco = factor(Q3.8, levels =
c("Definitely would not recommend", "Might not recommend",
"Not sure", "Might recommend",
"Certainly would recommend"),
ordered = TRUE),
#emp_reco_bin = emp
gov_pension = factor(Q3.9_1, levels =
c("No responsibility", "A little responsibility",
"Some responsibility", "A lot of responsibility"),
ordered=TRUE),
gov_ui = factor(Q3.9_2, levels =
c("No responsibility", "A little responsibility",
"Some responsibility", "A lot of responsibility"),
ordered=TRUE),
gov_childcare = factor(Q3.9_3, levels =
c("No responsibility", "A little responsibility",
"Some responsibility", "A lot of responsibility"),
ordered=TRUE),
home_ownership = factor(Q6.13),
healthcare = (Q2.16 == "Yes")
) %>%
as_survey_design(ids = 1, weights = rk_wgt)
#THD_dgn<-svydesign(id=~1, weights = ~rk_wgt,  data=THD_comp)
aware_reg_list<-svyglm(EHF_aware_list ~
age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college,
design = THD_comp,
family = quasibinomial)
summary(aware_reg_list)
aware_reg_list<-svyglm(EHF_aware_list ~
age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college + home_ownership + healthcare,
design = THD_comp,
family = quasibinomial)
summary(aware_reg_list)
names(aware_reg_list)
length(aware_reg_list$residuals)
wrkloyal_reg_c<-svyglm(as.numeric(wrk_loyal) ~
HDTreatment + age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college,
design = THD_comp)  # fitted values outside [1,4]
summary(wrkloyal_reg_c)
length(wrkloyal_reg_c$residuals)
wrkloyal_reg_c<-svyglm(as.numeric(wrk_loyal) ~
HDTreatment + age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college + healthcare+ home_ownership,
design = THD_comp)  # fitted values outside [1,4]
summary(wrkloyal_reg_c)
ui_reg_c<-svyglm(as.numeric(gov_ui) ~
HDTreatment +age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college,
design = THD_comp)
summary(ui_reg_c)
ui_reg_c<-svyglm(as.numeric(gov_ui) ~
HDTreatment +age + male +
main_job +
tenure_fac +
nonwhite +
fulltime +
hourly+
college  + healthcare+ home_ownership,
design = THD_comp)
summary(ui_reg_c)
.65*190
tab<-data.frame(player = c("you","A","B"),
option.1 = rep(80,3),
option.2=c(40,0,0),
option.3=c(40,0,50),
option.4=c(40,50,0))
tab
tab<-data.frame(
option.1 = rep(80,3),
option.2=c(40,0,0),
option.3=c(40,0,50),
option.4=c(40,50,0))
)
tab
row.names(tab)<-c("you","A","B"),
row.names(tab)<-c("you","A","B")
tab
t(tab)
library(ggplot2)
?plot_usmap
install.packages("plot_usmap")
